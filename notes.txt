Пропозал на добавление метаданных в JS для различных свойств объектов и в виде декораторов
https://rbuckton.github.io/reflect-metadata/ 

Зачем? Чтобы можно было получать описания методов, полей, параметров, как тут

// Decorator application
@ParamTypes(String, Number) // задаем параметры конструктора в декораторе
class C {
  constructor(text, i) {
  }

  @Type(String) // задаем тип геттера
  get name() { return "text"; }

  @Type(Function) // тип поля -- функция
  @ParamTypes(Number, Number) // тип параметров 
  @ReturnType(Number) // тип возвращаемого значения
  add(x, y) {
    return x + y;
  }
}

# Reflect metadata

Декораторы позволяют изменять класс и его члены с помощью декларативного синтаксиса
Юзкейсы (метаданные позволят добавлять это проще и с большей надежностью):
Композиция
Инъекция зависимостей
Преобразование типов в рантайме
Рефлексия и отражение
Тестирование